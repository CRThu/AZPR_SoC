$date
	Wed Nov 13 14:43:52 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module rom_top_tb $end
$var wire 1 ! rdy_n $end
$var wire 32 " rd_data [31:0] $end
$var reg 11 # addr [10:0] $end
$var reg 1 $ as_n $end
$var reg 1 % clk $end
$var reg 1 & cs_n $end
$var reg 1 ' reset $end
$scope module rom_top_01 $end
$var wire 11 ( addr [10:0] $end
$var wire 1 $ as_n $end
$var wire 1 % clk $end
$var wire 1 & cs_n $end
$var wire 1 ' reset $end
$var wire 32 ) rd_data [31:0] $end
$var reg 1 ! rdy_n $end
$scope module rom_01 $end
$var wire 11 * addr [10:0] $end
$var wire 1 % clk $end
$var reg 32 + dout [31:0] $end
$var integer 32 , i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1010 ,
bx +
b0 *
bx )
b0 (
1'
1&
0%
1$
b0 #
bx "
x!
$end
#100
b1001000110100010101100111 "
b1001000110100010101100111 )
b1001000110100010101100111 +
1%
#110
1!
#200
0%
#300
1%
#400
0%
#500
1%
0$
0&
0'
#510
0!
#600
0%
#700
1%
#800
0%
#900
1%
#1000
0%
b1 #
b1 (
b1 *
#1100
b10010001101000101011001111000 "
b10010001101000101011001111000 )
b10010001101000101011001111000 +
1%
#1200
0%
#1300
1%
#1400
0%
#1500
b100011010001010110011110001001 "
b100011010001010110011110001001 )
b100011010001010110011110001001 +
1%
b10 #
b10 (
b10 *
#1600
0%
#1700
1%
#1800
0%
#1900
1%
#2000
0%
b11 #
b11 (
b11 *
#2100
b110100010101100111100010011010 "
b110100010101100111100010011010 )
b110100010101100111100010011010 +
1%
#2200
0%
#2300
1%
#2400
0%
#2500
b1000101011001111000100110101011 "
b1000101011001111000100110101011 )
b1000101011001111000100110101011 +
1%
b100 #
b100 (
b100 *
#2600
0%
#2700
1%
#2800
0%
#2900
1%
#3000
0%
b101 #
b101 (
b101 *
#3100
b1010110011110001001101010111100 "
b1010110011110001001101010111100 )
b1010110011110001001101010111100 +
1%
#3200
0%
#3300
1%
#3400
0%
#3500
b1100111100010011010101111001101 "
b1100111100010011010101111001101 )
b1100111100010011010101111001101 +
1%
b110 #
b110 (
b110 *
#3600
0%
#3700
1%
#3800
0%
#3900
1%
#4000
0%
b111 #
b111 (
b111 *
#4100
b1111000100110101011110011011110 "
b1111000100110101011110011011110 )
b1111000100110101011110011011110 +
1%
#4200
0%
#4300
1%
#4400
0%
#4500
b10001001101010111100110111101111 "
b10001001101010111100110111101111 )
b10001001101010111100110111101111 +
1%
b1000 #
b1000 (
b1000 *
#4600
0%
#4700
1%
#4800
0%
#4900
1%
#5000
0%
b1001 #
b1001 (
b1001 *
#5100
b10011010101111001101111011110000 "
b10011010101111001101111011110000 )
b10011010101111001101111011110000 +
1%
#5200
0%
#5300
1%
#5400
0%
#5500
bx "
bx )
bx +
1%
b1010 #
b1010 (
b1010 *
#5600
0%
#5700
1%
#5800
0%
#5900
1%
#6000
0%
#6100
1%
#6200
0%
#6300
1%
#6400
0%
#6500
1%
